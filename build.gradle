plugins {
    id "de.undercouch.download" version "4.0.1"
    id "com.bmuschko.docker-remote-api" version "6.0.0"
}

ext {
    apmVersion = "1.12.0"
}

docker {
    registryCredentials {
        username = project.getProperty("username")
        password = project.getProperty("password")
    }
}

task downloadApm(type: Download) {
    src "https://search.maven.org/remotecontent?filepath=co/elastic/apm/elastic-apm-agent/${apmVersion}/elastic-apm-agent-${apmVersion}.jar"
    dest buildDir
    onlyIfModified true
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task dockerFile(type: Dockerfile) {
    arg('BASE_IMAGE')
    from('$BASE_IMAGE')
    arg('APM_VERSION')
    environmentVariable("APM_VERSION", '$APM_VERSION')
    copyFile('elastic-apm-agent-$APM_VERSION.jar', 'elastic-apm-agent.jar')
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task dockerJava8(type: DockerBuildImage) {
    dependsOn(["downloadApm", "dockerFile"])
    inputDir.set(buildDir)
    dockerFile.set(file("${buildDir}/docker/Dockerfile"))
    buildArgs.set(["BASE_IMAGE": "openjdk:8-jre-slim", "APM_VERSION": "${apmVersion}"])
    images.set(["mrjeffapp/openjdk-jre-apm:8", "mrjeffapp/openjdk-jre-apm:8-${apmVersion}"])
    noCache.set(true)
    pull.set(true)
}

task dockerJava10(type: DockerBuildImage) {
    dependsOn(["downloadApm", "dockerFile"])
    inputDir.set(buildDir)
    dockerFile.set(file("${buildDir}/docker/Dockerfile"))
    buildArgs.set(["BASE_IMAGE": "openjdk:10-jre-slim", "APM_VERSION": "${apmVersion}"])
    images.set(["mrjeffapp/openjdk-jre-apm:10", "mrjeffapp/openjdk-jre-apm:10-${apmVersion}"])
    noCache.set(true)
    pull.set(true)
}

task dockerJava11(type: DockerBuildImage) {
    dependsOn(["downloadApm", "dockerFile"])
    inputDir.set(buildDir)
    dockerFile.set(file("${buildDir}/docker/Dockerfile"))
    buildArgs.set(["BASE_IMAGE": "openjdk:11-jre-slim", "APM_VERSION": "${apmVersion}"])
    images.set(['mrjeffapp/openjdk-jre-apm:latest', "mrjeffapp/openjdk-jre-apm:11", "mrjeffapp/openjdk-jre-apm:11-${apmVersion}"])
    noCache.set(true)
    pull.set(true)
}

task dockerImage {
    dependsOn(["dockerJava8", "dockerJava10", "dockerJava11"])
}

import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task dockerPush(type: DockerPushImage) {
    dependsOn("dockerImage")
    images.set(["mrjeffapp/openjdk-jre-apm"])
}

task dockerRelease {
    dependsOn("dockerPush")
}

task clean {
    buildDir.deleteDir()
}
