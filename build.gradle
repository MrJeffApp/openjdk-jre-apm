plugins {
    id "de.undercouch.download" version "4.0.4"
    id "com.bmuschko.docker-remote-api" version "6.4.0"
}

ext {
    apmVersion = "1.15.0"
}

docker {
    registryCredentials {
        username = project.getProperty("username")
        password = project.getProperty("password")
    }
}

import de.undercouch.gradle.tasks.download.Download

task downloadApm(type: Download) {
    src "https://search.maven.org/remotecontent?filepath=co/elastic/apm/elastic-apm-agent/${apmVersion}/elastic-apm-agent-${apmVersion}.jar"
    dest buildDir
    onlyIfModified true
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task dockerFile(type: Dockerfile) {
    arg('BASE_IMAGE')
    from('$BASE_IMAGE')
    arg('APM_VERSION')
    environmentVariable("APM_VERSION", '$APM_VERSION')
    copyFile('elastic-apm-agent-$APM_VERSION.jar', 'elastic-apm-agent.jar')
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task dockerBuildImages {
    def builds = [
            "openjdk:8-jre-slim"        : [
                    "mrjeffapp/openjdk-jre-apm:8",
                    "mrjeffapp/openjdk-jre-apm:8-${apmVersion}"
            ],
            "openjdk:10-jre-slim"       : [
                    "mrjeffapp/openjdk-jre-apm:10",
                    "mrjeffapp/openjdk-jre-apm:10-${apmVersion}"
            ],
            "openjdk:11-jre-slim"       : [
                    "mrjeffapp/openjdk-jre-apm:latest",
                    "mrjeffapp/openjdk-jre-apm:11",
                    "mrjeffapp/openjdk-jre-apm:11-${apmVersion}"
            ],
            "adoptopenjdk/openjdk11-openj9:debianslim-jre": [
                    "mrjeffapp/adoptopenjdk-jre-openj9-apm:11",
                    "mrjeffapp/adoptopenjdk-jre-openj9-apm:11-${apmVersion}"
            ],
            "adoptopenjdk/openjdk14-openj9:debianslim-jre": [
                    "mrjeffapp/adoptopenjdk-jre-openj9-apm:latest",
                    "mrjeffapp/adoptopenjdk-jre-openj9-apm:14",
                    "mrjeffapp/adoptopenjdk-jre-openj9-apm:14-${apmVersion}"
            ],
    ]

    def dependsOnTasks = builds.each { baseImage, tags ->
        def cleanedBaseImage = baseImage.replaceAll("\\W", "_")
        task "dockerBuildImage-${cleanedBaseImage}" (type: DockerBuildImage) {
            dependsOn(["downloadApm", "dockerFile"])
            inputDir.set(project.buildDir)
            dockerFile.set(file("${project.buildDir}/docker/Dockerfile"))
            buildArgs.set(["BASE_IMAGE": baseImage, "APM_VERSION": "${apmVersion}"])
            images.set(tags)
            noCache.set(true)
            pull.set(true)
        }
    }.collect {
        def cleanedBaseImage = it.key.replaceAll("\\W", "_")
        return "dockerBuildImage-${cleanedBaseImage}"
    }

    dependsOn(dependsOnTasks)
}

import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task dockerPush(type: DockerPushImage) {
    dependsOn("dockerBuildImages")
    images.set(["mrjeffapp/openjdk-jre-apm", "mrjeffapp/adoptopenjdk-jre-openj9-apm"])
}

task dockerRelease {
    dependsOn("dockerPush")
}

task clean {
    buildDir.deleteDir()
}
